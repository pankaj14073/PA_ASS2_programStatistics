public class rd.test extends java.lang.Object
{
    char f;
    java.lang.String log;

    public void <init>()
    {
        rd.test this;

        this := @this: rd.test;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void happy(int)
    {
        int n, num, count, j, $i0;
        boolean status;
        byte n, $b1;
        java.io.PrintStream $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        double $d0, $d1;

        n := @parameter0: int;
        status = 1;
        num = 3;
        n = 10;
        if n < 1 goto label0;

        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("First ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(n);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" happy numbers are :-");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r2);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>(2);

     label0:
        count = 2;
        goto label7;

     label1:
        j = 2;
        goto label4;

     label2:
        $i0 = num % j;
        if $i0 != 0 goto label3;

        status = 0;
        goto label5;

     label3:
        j = j + 1;

     label4:
        $d0 = (double) j;
        $d1 = (double) num;
        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);
        $b1 = $d0 cmpg $d1;
        if $b1 <= 0 goto label2;

     label5:
        if status == 0 goto label6;

        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>(num);
        count = count + 1;

     label6:
        status = 1;
        num = num + 1;

     label7:
        if count <= n goto label1;

        return;
    }
}
